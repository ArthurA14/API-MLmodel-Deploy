name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Linter Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: Dockerfile

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/my-api-image:latest
          az acr build --registry ${{ secrets.REGISTRY_LOGIN_SERVER }} --image my-api-image:latest .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/my-api-image:latest

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@47e03a783248cc0b5647f7ea03a8fb807fbc8e2f
        with:
          acrName: efreiprediction
          containerAppEnvironment: group6-env
          containerAppName: group6-container
          targetPort: 80
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          imageToDeploy: ${{ secrets.REGISTRY_LOGIN_SERVER }}/my-api-image:latest

      - name: Configure Autoscaling
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name group6-container \
            --min-replicas 0 \
            --max-replicas 5 \
            --scale-rule-name azure-http-rule \
            --scale-rule-type http \
            --scale-rule-http-concurrency 100